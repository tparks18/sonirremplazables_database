{"ast":null,"code":"import * as React from 'react';\nimport { Action, UNSAFE_invariant, isRouteErrorResponse, UNSAFE_convertRoutesToDataRoutes, IDLE_NAVIGATION, IDLE_FETCHER, IDLE_BLOCKER } from '@remix-run/router';\nimport { parsePath, Router, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Routes, UNSAFE_enhanceManualRouteObjects, createPath } from 'react-router-dom';\n\n/**\n * A <Router> that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouter(_ref) {\n  let {\n    basename,\n    children,\n    location: locationProp = \"/\"\n  } = _ref;\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = Action.Pop;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state || null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: location,\n    navigationType: action,\n    navigator: staticNavigator,\n    static: true\n  });\n}\n\n/**\n * A Data Router that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouterProvider(_ref2) {\n  let {\n    context,\n    router,\n    hydrate = true,\n    nonce\n  } = _ref2;\n  !(router && context) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You must provide `router` and `context` to <StaticRouterProvider>\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let hydrateScript = \"\";\n  if (hydrate !== false) {\n    let data = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    }; // Use JSON.parse here instead of embedding a raw JS object here to speed\n    // up parsing on the client.  Dual-stringify is needed to ensure all quotes\n    // are properly escaped in the resulting string.  See:\n    //   https://v8.dev/blog/cost-of-javascript-2019#json\n\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: dataRouterContext.router.state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: dataRouterContext.basename,\n    location: dataRouterContext.router.state.location,\n    navigationType: dataRouterContext.router.state.historyAction,\n    navigator: dataRouterContext.navigator\n  }, /*#__PURE__*/React.createElement(Routes, null)))), hydrateScript ? /*#__PURE__*/React.createElement(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: nonce,\n    dangerouslySetInnerHTML: {\n      __html: hydrateScript\n    }\n  }) : null);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // deserializeErrors in react-router-dom/index.tsx :)\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = {\n        ...val,\n        __type: \"RouteErrorResponse\"\n      };\n    } else if (val instanceof Error) {\n      // Do not serialize stack traces from SSR for security reasons\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\"\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(`You cannot use navigator.push() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`);\n    },\n    replace(to) {\n      throw new Error(`You cannot use navigator.replace() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere ` + `in your app.`);\n    },\n    go(delta) {\n      throw new Error(`You cannot use navigator.go() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${delta})\\` somewhere in your app.`);\n    },\n    back() {\n      throw new Error(`You cannot use navigator.back() on the server because it is a stateless ` + `environment.`);\n    },\n    forward() {\n      throw new Error(`You cannot use navigator.forward() on the server because it is a stateless ` + `environment.`);\n    }\n  };\n} // Temporary manifest generation - we should optimize this by combining the\n// tree-walks between convertRoutesToDataRoutes, enhanceManualRouteObjects,\n// and generateManifest.\n// Also look into getting rid of `route as AgnosticDataRouteObject` down below?\n\nfunction generateManifest(routes) {\n  let manifest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Map();\n  routes.forEach(route => {\n    manifest.set(route.id, route);\n    if (route.children) {\n      generateManifest(route.children, manifest);\n    }\n  });\n  return manifest;\n}\nfunction createStaticRouter(routes, context) {\n  let dataRoutes = UNSAFE_convertRoutesToDataRoutes(UNSAFE_enhanceManualRouteObjects(routes));\n  let manifest = generateManifest(dataRoutes); // Because our context matches may be from a framework-agnostic set of\n  // routes passed to createStaticHandler(), we update them here with our\n  // newly created/enhanced data routes\n\n  let matches = context.matches.map(match => {\n    let route = manifest.get(match.route.id) || match.route;\n    return {\n      ...match,\n      route: route\n    };\n  });\n  let msg = method => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get state() {\n      return {\n        historyAction: Action.Pop,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: new Map(),\n        blockers: new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    _internalFetchControllers: new Map(),\n    _internalActiveDeferreds: new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  // Locations should already be encoded on the server, so just return as-is\n  let path = typeof to === \"string\" ? parsePath(to) : to;\n  return {\n    pathname: path.pathname || \"\",\n    search: path.search || \"\",\n    hash: path.hash || \"\"\n  };\n} // This utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\nexport { StaticRouter, StaticRouterProvider, createStaticRouter };","map":{"version":3,"names":["React","Action","UNSAFE_invariant","isRouteErrorResponse","UNSAFE_convertRoutesToDataRoutes","IDLE_NAVIGATION","IDLE_FETCHER","IDLE_BLOCKER","parsePath","Router","UNSAFE_DataRouterContext","UNSAFE_DataRouterStateContext","Routes","UNSAFE_enhanceManualRouteObjects","createPath","StaticRouter","basename","children","location","locationProp","action","Pop","pathname","search","hash","state","key","staticNavigator","getStatelessNavigator","createElement","navigationType","navigator","static","StaticRouterProvider","context","router","hydrate","nonce","process","env","NODE_ENV","dataRouterContext","staticContext","hydrateScript","data","loaderData","actionData","errors","serializeErrors","json","htmlEscape","JSON","stringify","Fragment","Provider","value","historyAction","suppressHydrationWarning","dangerouslySetInnerHTML","__html","entries","Object","serialized","val","__type","Error","message","createHref","encodeLocation","push","to","replace","go","delta","back","forward","generateManifest","routes","manifest","Map","forEach","route","set","id","createStaticRouter","dataRoutes","matches","map","match","get","msg","method","initialized","navigation","restoreScrollPosition","preventScrollReset","revalidation","fetchers","blockers","initialize","subscribe","enableScrollRestoration","navigate","fetch","revalidate","getFetcher","deleteFetcher","dispose","getBlocker","deleteBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","path","ESCAPE_LOOKUP","ESCAPE_REGEX","str"],"sources":["/Users/alvisperalta/Documents/Inrremplazables-database/fullstack_database/Son-imrremplazables-s-database-frontend/node_modules/react-router-dom/server.mjs"],"sourcesContent":["import * as React from 'react';\nimport { Action, UNSAFE_invariant, isRouteErrorResponse, UNSAFE_convertRoutesToDataRoutes, IDLE_NAVIGATION, IDLE_FETCHER, IDLE_BLOCKER } from '@remix-run/router';\nimport { parsePath, Router, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Routes, UNSAFE_enhanceManualRouteObjects, createPath } from 'react-router-dom';\n\n/**\n * A <Router> that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let action = Action.Pop;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state || null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: location,\n    navigationType: action,\n    navigator: staticNavigator,\n    static: true\n  });\n}\n\n/**\n * A Data Router that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate = true,\n  nonce\n}) {\n  !(router && context) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You must provide `router` and `context` to <StaticRouterProvider>\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let hydrateScript = \"\";\n\n  if (hydrate !== false) {\n    let data = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    }; // Use JSON.parse here instead of embedding a raw JS object here to speed\n    // up parsing on the client.  Dual-stringify is needed to ensure all quotes\n    // are properly escaped in the resulting string.  See:\n    //   https://v8.dev/blog/cost-of-javascript-2019#json\n\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: dataRouterContext.router.state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: dataRouterContext.basename,\n    location: dataRouterContext.router.state.location,\n    navigationType: dataRouterContext.router.state.historyAction,\n    navigator: dataRouterContext.navigator\n  }, /*#__PURE__*/React.createElement(Routes, null)))), hydrateScript ? /*#__PURE__*/React.createElement(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: nonce,\n    dangerouslySetInnerHTML: {\n      __html: hydrateScript\n    }\n  }) : null);\n}\n\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // deserializeErrors in react-router-dom/index.tsx :)\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val,\n        __type: \"RouteErrorResponse\"\n      };\n    } else if (val instanceof Error) {\n      // Do not serialize stack traces from SSR for security reasons\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\"\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n\n    push(to) {\n      throw new Error(`You cannot use navigator.push() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`);\n    },\n\n    replace(to) {\n      throw new Error(`You cannot use navigator.replace() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere ` + `in your app.`);\n    },\n\n    go(delta) {\n      throw new Error(`You cannot use navigator.go() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${delta})\\` somewhere in your app.`);\n    },\n\n    back() {\n      throw new Error(`You cannot use navigator.back() on the server because it is a stateless ` + `environment.`);\n    },\n\n    forward() {\n      throw new Error(`You cannot use navigator.forward() on the server because it is a stateless ` + `environment.`);\n    }\n\n  };\n} // Temporary manifest generation - we should optimize this by combining the\n// tree-walks between convertRoutesToDataRoutes, enhanceManualRouteObjects,\n// and generateManifest.\n// Also look into getting rid of `route as AgnosticDataRouteObject` down below?\n\n\nfunction generateManifest(routes, manifest = new Map()) {\n  routes.forEach(route => {\n    manifest.set(route.id, route);\n\n    if (route.children) {\n      generateManifest(route.children, manifest);\n    }\n  });\n  return manifest;\n}\n\nfunction createStaticRouter(routes, context) {\n  let dataRoutes = UNSAFE_convertRoutesToDataRoutes(UNSAFE_enhanceManualRouteObjects(routes));\n  let manifest = generateManifest(dataRoutes); // Because our context matches may be from a framework-agnostic set of\n  // routes passed to createStaticHandler(), we update them here with our\n  // newly created/enhanced data routes\n\n  let matches = context.matches.map(match => {\n    let route = manifest.get(match.route.id) || match.route;\n    return { ...match,\n      route: route\n    };\n  });\n\n  let msg = method => `You cannot use router.${method}() on the server because it is a stateless environment`;\n\n  return {\n    get basename() {\n      return context.basename;\n    },\n\n    get state() {\n      return {\n        historyAction: Action.Pop,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: new Map(),\n        blockers: new Map()\n      };\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize() {\n      throw msg(\"initialize\");\n    },\n\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n\n    navigate() {\n      throw msg(\"navigate\");\n    },\n\n    fetch() {\n      throw msg(\"fetch\");\n    },\n\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n\n    createHref,\n    encodeLocation,\n\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n\n    dispose() {\n      throw msg(\"dispose\");\n    },\n\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n\n    _internalFetchControllers: new Map(),\n    _internalActiveDeferreds: new Map(),\n\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    }\n\n  };\n}\n\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\n\nfunction encodeLocation(to) {\n  // Locations should already be encoded on the server, so just return as-is\n  let path = typeof to === \"string\" ? parsePath(to) : to;\n  return {\n    pathname: path.pathname || \"\",\n    search: path.search || \"\",\n    hash: path.hash || \"\"\n  };\n} // This utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\n\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\n\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n\nexport { StaticRouter, StaticRouterProvider, createStaticRouter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}