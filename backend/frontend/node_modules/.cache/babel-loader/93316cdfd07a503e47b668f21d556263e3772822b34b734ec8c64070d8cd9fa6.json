{"ast":null,"code":"var _jsxFileName = \"/Users/tatyanaparks/Desktop/fullstack_database/frontend/src/components/Paginate.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import { Pagination } from 'react-bootstrap'\n// import { Link } from 'react-router-dom'\n\n// function Paginate({pages, page, keyword='', isAdmin=false}) {\n//     if(keyword){\n//         keyword = keyword.split('?keyword=')[1].split('&')[0]\n//     }\n\n//   return (\n//     pages > 1 && (\n//       <Pagination>\n//         {[...Array(pages).keys()].map((x) => (\n//           <Link\n//             key={x + 1}\n//             to={{\n//               pathname: \"/\",\n//               search: `?keyword=${keyword}&page=${x + 1}`,\n//             }}\n//           >\n//             <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n//           </Link>\n//         ))}\n//       </Pagination>\n//     )\n//   );\n// }\n\n// export default Paginate\n\nimport React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Paginate(_ref) {\n  _s();\n  let {\n    pages,\n    page,\n    keyword = \"\"\n  } = _ref;\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const currentPage = Number(searchParams.get(\"page\")) || 1;\n  const getLink = pageNumber => {\n    searchParams.set(\"page\", pageNumber);\n    searchParams.set(\"keyword\", keyword);\n    return `${location.pathname}?${searchParams.toString()}`;\n  };\n  return pages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [...Array(pages).keys()].map(x => {\n      const pageNumber = x + 1;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: getLink(pageNumber),\n        className: `page-link${pageNumber === currentPage ? \" active\" : \"\"}`,\n        children: pageNumber\n      }, pageNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n_s(Paginate, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Paginate;\nexport default Paginate;\nvar _c;\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"names":["React","Pagination","useLocation","Link","Paginate","pages","page","keyword","location","searchParams","URLSearchParams","search","currentPage","Number","get","getLink","pageNumber","set","pathname","toString","Array","keys","map","x"],"sources":["/Users/tatyanaparks/Desktop/fullstack_database/frontend/src/components/Paginate.js"],"sourcesContent":["// import React from 'react'\n// import { Pagination } from 'react-bootstrap'\n// import { Link } from 'react-router-dom'\n\n// function Paginate({pages, page, keyword='', isAdmin=false}) {\n//     if(keyword){\n//         keyword = keyword.split('?keyword=')[1].split('&')[0]\n//     }\n    \n//   return (\n//     pages > 1 && (\n//       <Pagination>\n//         {[...Array(pages).keys()].map((x) => (\n//           <Link\n//             key={x + 1}\n//             to={{\n//               pathname: \"/\",\n//               search: `?keyword=${keyword}&page=${x + 1}`,\n//             }}\n//           >\n//             <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n//           </Link>\n//         ))}\n//       </Pagination>\n//     )\n//   );\n// }\n\n// export default Paginate\n\nimport React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nfunction Paginate({ pages, page, keyword = \"\" }) {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const currentPage = Number(searchParams.get(\"page\")) || 1;\n\n  const getLink = (pageNumber) => {\n    searchParams.set(\"page\", pageNumber);\n    searchParams.set(\"keyword\", keyword);\n    return `${location.pathname}?${searchParams.toString()}`;\n  };\n\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => {\n          const pageNumber = x + 1;\n          return (\n            <Link\n              key={pageNumber}\n              to={getLink(pageNumber)}\n              className={`page-link${\n                pageNumber === currentPage ? \" active\" : \"\"\n              }`}\n            >\n              {pageNumber}\n            </Link>\n          );\n        })}\n      </Pagination>\n    )\n  );\n}\n\nexport default Paginate;\n\n\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAAC;AAErD,SAASC,QAAQ,OAAgC;EAAA;EAAA,IAA/B;IAAEC,KAAK;IAAEC,IAAI;IAAEC,OAAO,GAAG;EAAG,CAAC;EAC7C,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,YAAY,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACzD,MAAMC,WAAW,GAAGC,MAAM,CAACJ,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;EAEzD,MAAMC,OAAO,GAAIC,UAAU,IAAK;IAC9BP,YAAY,CAACQ,GAAG,CAAC,MAAM,EAAED,UAAU,CAAC;IACpCP,YAAY,CAACQ,GAAG,CAAC,SAAS,EAAEV,OAAO,CAAC;IACpC,OAAQ,GAAEC,QAAQ,CAACU,QAAS,IAAGT,YAAY,CAACU,QAAQ,EAAG,EAAC;EAC1D,CAAC;EAED,OACEd,KAAK,GAAG,CAAC,iBACP,QAAC,UAAU;IAAA,UACR,CAAC,GAAGe,KAAK,CAACf,KAAK,CAAC,CAACgB,IAAI,EAAE,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAK;MACnC,MAAMP,UAAU,GAAGO,CAAC,GAAG,CAAC;MACxB,oBACE,QAAC,IAAI;QAEH,EAAE,EAAER,OAAO,CAACC,UAAU,CAAE;QACxB,SAAS,EAAG,YACVA,UAAU,KAAKJ,WAAW,GAAG,SAAS,GAAG,EAC1C,EAAE;QAAA,UAEFI;MAAU,GANNA,UAAU;QAAA;QAAA;QAAA;MAAA,QAOV;IAEX,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEL;AAEL;AAAC,GA/BQZ,QAAQ;EAAA,QACEF,WAAW;AAAA;AAAA,KADrBE,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}