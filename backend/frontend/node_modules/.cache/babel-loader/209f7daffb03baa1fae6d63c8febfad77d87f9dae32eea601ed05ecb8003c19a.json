{"ast":null,"code":"import axios from \"axios\";\nimport { PERSON_LIST_REQUEST, PERSON_LIST_SUCCESS, PERSON_LIST_FAIL, PERSON_DETAILS_REQUEST, PERSON_DETAILS_SUCCESS, PERSON_DETAILS_FAIL, PERSON_DELETE_REQUEST, PERSON_DELETE_SUCCESS, PERSON_DELETE_FAIL } from \"../constants/personConstants\";\nexport const listPersons = () => async dispatch => {\n  try {\n    dispatch({\n      type: PERSON_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/missingPersons/\");\n    dispatch({\n      type: PERSON_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PERSON_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listPersonDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PERSON_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/missingPersons/${id}`);\n    dispatch({\n      type: PERSON_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PERSON_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deletePerson = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PERSON_DELETE_REQUEST\n    });\n\n    //const { data } = await axios.get(`/api/missingPersons/${id}`);\n\n    dispatch({\n      type: PERSON_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PERSON_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","PERSON_LIST_REQUEST","PERSON_LIST_SUCCESS","PERSON_LIST_FAIL","PERSON_DETAILS_REQUEST","PERSON_DETAILS_SUCCESS","PERSON_DETAILS_FAIL","PERSON_DELETE_REQUEST","PERSON_DELETE_SUCCESS","PERSON_DELETE_FAIL","listPersons","dispatch","type","data","get","payload","error","response","detail","message","listPersonDetails","id","deletePerson","getState"],"sources":["/Users/tatyanaparks/Desktop/fullstack_database/frontend/src/actions/personActions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  PERSON_LIST_REQUEST,\n  PERSON_LIST_SUCCESS,\n  PERSON_LIST_FAIL,\n  PERSON_DETAILS_REQUEST,\n  PERSON_DETAILS_SUCCESS,\n  PERSON_DETAILS_FAIL,\n  PERSON_DELETE_REQUEST,\n  PERSON_DELETE_SUCCESS,\n  PERSON_DELETE_FAIL,\n} from \"../constants/personConstants\";\n\nexport const listPersons =\n  () =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PERSON_LIST_REQUEST })\n\n      const { data } = await axios.get(\"/api/missingPersons/\")\n\n      dispatch({\n        type: PERSON_LIST_SUCCESS,\n        payload: data,\n      })\n\n    } catch (error) {\n      dispatch({\n        type: PERSON_LIST_FAIL,\n        payload:\n        error.response && error.response.data.detail\n        ? error.response.data.detail\n        : error.message,\n      })\n    }\n  };\n\n  export const listPersonDetails = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: PERSON_DETAILS_REQUEST });\n\n      const { data } = await axios.get(`/api/missingPersons/${id}`);\n\n      dispatch({\n        type: PERSON_DETAILS_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PERSON_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\n  export const deletePerson = (id) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PERSON_DELETE_REQUEST });\n\n      //const { data } = await axios.get(`/api/missingPersons/${id}`);\n\n      dispatch({\n        type: PERSON_DELETE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PERSON_DELETE_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,EAChBC,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,QACb,8BAA8B;AAErC,OAAO,MAAMC,WAAW,GACtB,MACA,MAAOC,QAAQ,IAAK;EAClB,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAoB,CAAC,CAAC;IAEvC,MAAM;MAAEY;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,sBAAsB,CAAC;IAExDH,QAAQ,CAAC;MACPC,IAAI,EAAEV,mBAAmB;MACzBa,OAAO,EAAEF;IACX,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAET,gBAAgB;MACtBY,OAAO,EACPC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1CF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACV,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAIC,EAAE,IAAK,MAAOV,QAAQ,IAAK;EAC3D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAuB,CAAC,CAAC;IAE1C,MAAM;MAAES;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,uBAAsBO,EAAG,EAAC,CAAC;IAE7DV,QAAQ,CAAC;MACPC,IAAI,EAAEP,sBAAsB;MAC5BU,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEN,mBAAmB;MACzBS,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GACxCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMG,YAAY,GAAID,EAAE,IAAK,OAAOV,QAAQ,EAAEY,QAAQ,KAAK;EAChE,IAAI;IACFZ,QAAQ,CAAC;MAAEC,IAAI,EAAEL;IAAsB,CAAC,CAAC;;IAEzC;;IAEAI,QAAQ,CAAC;MACPC,IAAI,EAAEJ,qBAAqB;MAC3BO,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEH,kBAAkB;MACxBM,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GACxCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}