{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (firstName, lastName, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/register/\", {\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/register/\", {\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","firstName","lastName","first_name","last_name","getUserDetails","id","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL"],"sources":["/Users/tatyanaparks/Desktop/fullstack_database/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios'\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n    try{\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login',\n        { 'username': email, 'password': password },\n        config\n        )\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n        dispatch({\n          type: USER_LOGIN_FAIL,\n          payload:\n            error.response && error.response.data.detail\n              ? error.response.data.detail\n              : error.message,\n        });\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type:USER_LOGOUT })\n}\n\nexport const register = (firstName, lastName, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/register/\",\n      {\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        password: password,\n      },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails =\n  (id) => async (dispatch) => {\n    try {\n      dispatch({\n        type: USER_REGISTER_REQUEST,\n      });\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/users/register/\",\n        {\n          first_name: firstName,\n          last_name: lastName,\n          email: email,\n          password: password,\n        },\n        config\n      );\n\n      dispatch({\n        type: USER_DETAILS_SUCCESS,\n        payload: data,\n      });\n\n    } catch (error) {\n      dispatch({\n        type: USER_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}